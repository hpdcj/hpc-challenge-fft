%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/auxil/HPL_abort.c
Compiled : 2016-03-19  13:19:25
Compiler : Version 8.4.5
Ftnlx    : Version 8413 (libcif 84006)
Target   : x86-64
Command  : driver.cc -h cpu=haswell -h static -D __CRAYXC -D __CRAY_HASWELL
           -D __CRAYXT_COMPUTE_LINUX_TARGET -h network=aries
           -o ../../../src/auxil/HPL_abort.o -c ../../../src/auxil/HPL_abort.c
           -I ../../../include -I ../../../include/CrayX1 -D Add_
           -D StringSunStyle -D F77_INTEGER=int -O 2 -h list=m
           -D LONG_IS_64BITS -h restrict=a
           -W l,--rpath=/opt/cray/cce/8.4.5/craylibs/x86-64
           -ibase-compiler /opt/cray/cce/8.4.5/CC/x86-64/compiler_include_base
           -isystem /opt/cray/cce/8.4.5/craylibs/x86-64/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include-fixed
           -isystem /usr/include
           -I /opt/cray/mpt/7.3.2/gni/mpich-cray/8.3/include
           -I /opt/cray/libsci/16.03.1/CRAY/8.3/x86_64/include
           -I /opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
           -I /opt/cray/pmi/5.0.10-1.0000.11050.0.0.ari/include
           -I /opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
           -I /opt/cray/dmapp/7.0.1-1.0502.11080.8.76.ari/include
           -I /opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
           -I /opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
           -I /opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/../include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/..//include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
           -I /opt/cray-hss-devel/7.2.0/include

clx report
------------
Source   : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/auxil/HPL_abort.c
Date     : 03/19/2016  13:19:25


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.     /* 
    2.      * -- High Performance Computing Linpack Benchmark (HPL)                
    3.      *    HPL - 2.0 - September 10, 2008                          
    4.      *    Antoine P. Petitet                                                
    5.      *    University of Tennessee, Knoxville                                
    6.      *    Innovative Computing Laboratory                                 
    7.      *    (C) Copyright 2000-2008 All Rights Reserved                       
    8.      *                                                                      
    9.      * -- Copyright notice and Licensing terms:                             
   10.      *                                                                      
   11.      * Redistribution  and  use in  source and binary forms, with or without
   12.      * modification, are  permitted provided  that the following  conditions
   13.      * are met:                                                             
   14.      *                                                                      
   15.      * 1. Redistributions  of  source  code  must retain the above copyright
   16.      * notice, this list of conditions and the following disclaimer.        
   17.      *                                                                      
   18.      * 2. Redistributions in binary form must reproduce  the above copyright
   19.      * notice, this list of conditions,  and the following disclaimer in the
   20.      * documentation and/or other materials provided with the distribution. 
   21.      *                                                                      
   22.      * 3. All  advertising  materials  mentioning  features  or  use of this
   23.      * software must display the following acknowledgement:                 
   24.      * This  product  includes  software  developed  at  the  University  of
   25.      * Tennessee, Knoxville, Innovative Computing Laboratory.             
   26.      *                                                                      
   27.      * 4. The name of the  University,  the name of the  Laboratory,  or the
   28.      * names  of  its  contributors  may  not  be used to endorse or promote
   29.      * products  derived   from   this  software  without  specific  written
   30.      * permission.                                                          
   31.      *                                                                      
   32.      * -- Disclaimer:                                                       
   33.      *                                                                      
   34.      * THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   35.      * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT
   36.      * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   37.      * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY
   38.      * OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,
   39.      * SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
   40.      * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   41.      * DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY
   42.      * THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT
   43.      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   44.      * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
   45.      * ---------------------------------------------------------------------
   46.      */ 
   47.     /*
   48.      * Include files
   49.      */
   50.     #include "hpl.h"
   51.     
   52.     #ifdef HPL_STDC_HEADERS
   53.     void HPL_abort
   54.     (
   55.        int                              LINE,
   56.        const char *                     SRNAME,
   57.        const char *                     FORM,
   58.        ...                              
   59.     )
   60.     #else
   61.     void HPL_abort( va_alist )
   62.     va_dcl
   63.     #endif
   64.     {
   65.     /* 
   66.      * Purpose
   67.      * =======
   68.      *
   69.      * HPL_abort displays an error message on stderr and halts execution.
   70.      * 
   71.      *
   72.      * Arguments
   73.      * =========
   74.      *
   75.      * LINE    (local input)                 int
   76.      *         On entry,  LINE  specifies the line  number in the file where
   77.      *         the  error  has  occured.  When  LINE  is not a positive line
   78.      *         number, it is ignored.
   79.      *
   80.      * SRNAME  (local input)                 const char *
   81.      *         On entry, SRNAME  should  be the name of the routine  calling
   82.      *         this error handler.
   83.      *
   84.      * FORM    (local input)                 const char *
   85.      *         On entry, FORM specifies the format, i.e., how the subsequent
   86.      *         arguments are converted for output.
   87.      *
   88.      *         (local input)                 ...
   89.      *         On entry,  ...  is the list of arguments to be printed within
   90.      *         the format string.
   91.      *
   92.      * ---------------------------------------------------------------------
   93.      */ 
   94.     /*
   95.      * .. Local Variables ..
   96.      */
   97.        va_list                    argptr;
   98.        char                       cline[128];
   99.     #ifndef HPL_STDC_HEADERS
  100.        int                        LINE;
  101.        char                       * FORM, * SRNAME;
  102.     #endif
  103.     /* ..
  104.      * .. Executable Statements ..
  105.      */
  106.     #ifdef HPL_STDC_HEADERS
  107.        va_start( argptr, FORM );
  108.     #else
  109.        va_start( argptr );
  110.        LINE   = va_arg( argptr, int      );
  111.        SRNAME = va_arg( argptr, char *   );
  112.        FORM   = va_arg( argptr, char *   );
  113.     #endif
  114.  +     (void) vsprintf( cline, FORM, argptr );
  115.        va_end( argptr ); 
  116.     /*
  117.      * Display an error message
  118.      */
  119.        if( LINE <= 0 )
  120.  +        HPL_fprintf( stderr, "%s %s:\n>>> %s <<< Abort ...\n\n",
  121.                        "HPL ERROR in function", SRNAME, cline );
  122.        else
  123.  +        HPL_fprintf( stderr, "%s %d %s %s:\n>>> %s <<< Abort ...\n\n",
  124.                        "HPL ERROR on line", LINE, "of function", SRNAME, cline );
  125.  +     exit( 0 );
  126.     /*
  127.      * End of HPL_abort
  128.      */
  129.     } 

CC-3021 CC: IPA File = HPL_abort.c, Line = 114 
  "vsprintf" (called from "HPL_abort") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_abort.c, Line = 120 
  "HPL_fprintf" (called from "HPL_abort") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_abort.c, Line = 123 
  "HPL_fprintf" (called from "HPL_abort") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_abort.c, Line = 125 
  "exit" (called from "HPL_abort") was not inlined because the compiler was unable to locate the routine.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
