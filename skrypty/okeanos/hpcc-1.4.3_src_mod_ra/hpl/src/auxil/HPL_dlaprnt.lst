%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/auxil/HPL_dlaprnt.c
Compiled : 2016-03-19  13:19:25
Compiler : Version 8.4.5
Ftnlx    : Version 8413 (libcif 84006)
Target   : x86-64
Command  : driver.cc -h cpu=haswell -h static -D __CRAYXC -D __CRAY_HASWELL
           -D __CRAYXT_COMPUTE_LINUX_TARGET -h network=aries
           -o ../../../src/auxil/HPL_dlaprnt.o
           -c ../../../src/auxil/HPL_dlaprnt.c -I ../../../include
           -I ../../../include/CrayX1 -D Add_ -D StringSunStyle
           -D F77_INTEGER=int -O 2 -h list=m -D LONG_IS_64BITS -h restrict=a
           -W l,--rpath=/opt/cray/cce/8.4.5/craylibs/x86-64
           -ibase-compiler /opt/cray/cce/8.4.5/CC/x86-64/compiler_include_base
           -isystem /opt/cray/cce/8.4.5/craylibs/x86-64/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include-fixed
           -isystem /usr/include
           -I /opt/cray/mpt/7.3.2/gni/mpich-cray/8.3/include
           -I /opt/cray/libsci/16.03.1/CRAY/8.3/x86_64/include
           -I /opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
           -I /opt/cray/pmi/5.0.10-1.0000.11050.0.0.ari/include
           -I /opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
           -I /opt/cray/dmapp/7.0.1-1.0502.11080.8.76.ari/include
           -I /opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
           -I /opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
           -I /opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/../include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/..//include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
           -I /opt/cray-hss-devel/7.2.0/include

clx report
------------
Source   : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/auxil/HPL_dlaprnt.c
Date     : 03/19/2016  13:19:26


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.           /* 
    2.            * -- High Performance Computing Linpack Benchmark (HPL)                
    3.            *    HPL - 2.0 - September 10, 2008                          
    4.            *    Antoine P. Petitet                                                
    5.            *    University of Tennessee, Knoxville                                
    6.            *    Innovative Computing Laboratory                                 
    7.            *    (C) Copyright 2000-2008 All Rights Reserved                       
    8.            *                                                                      
    9.            * -- Copyright notice and Licensing terms:                             
   10.            *                                                                      
   11.            * Redistribution  and  use in  source and binary forms, with or without
   12.            * modification, are  permitted provided  that the following  conditions
   13.            * are met:                                                             
   14.            *                                                                      
   15.            * 1. Redistributions  of  source  code  must retain the above copyright
   16.            * notice, this list of conditions and the following disclaimer.        
   17.            *                                                                      
   18.            * 2. Redistributions in binary form must reproduce  the above copyright
   19.            * notice, this list of conditions,  and the following disclaimer in the
   20.            * documentation and/or other materials provided with the distribution. 
   21.            *                                                                      
   22.            * 3. All  advertising  materials  mentioning  features  or  use of this
   23.            * software must display the following acknowledgement:                 
   24.            * This  product  includes  software  developed  at  the  University  of
   25.            * Tennessee, Knoxville, Innovative Computing Laboratory.             
   26.            *                                                                      
   27.            * 4. The name of the  University,  the name of the  Laboratory,  or the
   28.            * names  of  its  contributors  may  not  be used to endorse or promote
   29.            * products  derived   from   this  software  without  specific  written
   30.            * permission.                                                          
   31.            *                                                                      
   32.            * -- Disclaimer:                                                       
   33.            *                                                                      
   34.            * THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   35.            * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT
   36.            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   37.            * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY
   38.            * OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,
   39.            * SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
   40.            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   41.            * DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY
   42.            * THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT
   43.            * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   44.            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
   45.            * ---------------------------------------------------------------------
   46.            */ 
   47.           /*
   48.            * Include files
   49.            */
   50.           #include "hpl.h"
   51.           
   52.           #ifdef HPL_STDC_HEADERS
   53.           void HPL_dlaprnt
   54.           (
   55.              const int                        M,
   56.              const int                        N,
   57.              double *                         A,
   58.              const int                        IA,
   59.              const int                        JA,
   60.              const int                        LDA,
   61.              const char *                     CMATNM
   62.           )
   63.           #else
   64.           void HPL_dlaprnt
   65.           ( M, N, A, IA, JA, LDA, CMATNM )
   66.              const int                        M;
   67.              const int                        N;
   68.              double *                         A;
   69.              const int                        IA;
   70.              const int                        JA;
   71.              const int                        LDA;
   72.              const char *                     CMATNM;
   73.           #endif
   74.           {
   75.           /* 
   76.            * Purpose
   77.            * =======
   78.            *
   79.            * HPL_dlaprnt prints to standard error an M-by-N matrix A.
   80.            * 
   81.            *
   82.            * Arguments
   83.            * =========
   84.            *
   85.            * M       (local input)                 const int
   86.            *         On entry,  M  specifies the number of rows of A. M must be at
   87.            *         least zero.
   88.            *
   89.            * N       (local input)                 const int
   90.            *         On entry,  N  specifies the number of columns of A. N must be
   91.            *         at least zero.
   92.            *
   93.            * A       (local input)                 double *
   94.            *         On entry, A  points to an array of dimension (LDA,N).
   95.            *
   96.            * IA      (local input)                 const int
   97.            *         On entry, IA specifies the starting row index to be printed.
   98.            *
   99.            * JA      (local input)                 const int
  100.            *         On entry,  JA  specifies  the  starting  column index  to be
  101.            *         printed.
  102.            *
  103.            * LDA     (local input)                 const int
  104.            *         On entry, LDA specifies the leading dimension of the array A.
  105.            *         LDA must be at least max(1,M).
  106.            *
  107.            * CMATNM  (local input)                 const char *
  108.            *         On entry, CMATNM is the name of the matrix to be printed.
  109.            *
  110.            * ---------------------------------------------------------------------
  111.            */ 
  112.           /*
  113.            * .. Local Variables ..
  114.            */
  115.              int                        i, j;
  116.           /* ..
  117.            * .. Executable Statements ..
  118.            */
  119.  + 1----<    for( j = 0; j < N; j++ )
  120.    1         {
  121.  + 1 2--<       for( i = 0; i < M; i++ )
  122.    1 2          {
  123.  + 1 2             HPL_fprintf( stderr, "%s(%6d,%6d)=%30.18f\n", CMATNM, IA+i,
  124.    1 2                          JA+j, *(Mptr( A, i, j, LDA )) );
  125.    1 2-->       }
  126.    1---->    }
  127.           /*
  128.            * End of HPL_dlaprnt
  129.            */
  130.           }

CC-6287 CC: VECTOR File = HPL_dlaprnt.c, Line = 119 
  A loop was not vectorized because it contains a call to function "HPL_fprintf" on line 123.

CC-6287 CC: VECTOR File = HPL_dlaprnt.c, Line = 121 
  A loop was not vectorized because it contains a call to function "HPL_fprintf" on line 123.

CC-3021 CC: IPA File = HPL_dlaprnt.c, Line = 123 
  "HPL_fprintf" (called from "HPL_dlaprnt") was not inlined because the compiler was unable to locate the routine.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
