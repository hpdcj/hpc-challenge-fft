%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/grid/HPL_max.c
Compiled : 2016-03-19  13:19:35
Compiler : Version 8.4.5
Ftnlx    : Version 8413 (libcif 84006)
Target   : x86-64
Command  : driver.cc -h cpu=haswell -h static -D __CRAYXC -D __CRAY_HASWELL
           -D __CRAYXT_COMPUTE_LINUX_TARGET -h network=aries
           -o ../../../src/grid/HPL_max.o -c ../../../src/grid/HPL_max.c
           -I ../../../include -I ../../../include/CrayX1 -D Add_
           -D StringSunStyle -D F77_INTEGER=int -O 2 -h list=m
           -D LONG_IS_64BITS -h restrict=a
           -W l,--rpath=/opt/cray/cce/8.4.5/craylibs/x86-64
           -ibase-compiler /opt/cray/cce/8.4.5/CC/x86-64/compiler_include_base
           -isystem /opt/cray/cce/8.4.5/craylibs/x86-64/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include-fixed
           -isystem /usr/include
           -I /opt/cray/mpt/7.3.2/gni/mpich-cray/8.3/include
           -I /opt/cray/libsci/16.03.1/CRAY/8.3/x86_64/include
           -I /opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
           -I /opt/cray/pmi/5.0.10-1.0000.11050.0.0.ari/include
           -I /opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
           -I /opt/cray/dmapp/7.0.1-1.0502.11080.8.76.ari/include
           -I /opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
           -I /opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
           -I /opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/../include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/..//include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
           -I /opt/cray-hss-devel/7.2.0/include

clx report
------------
Source   : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/grid/HPL_max.c
Date     : 03/19/2016  13:19:35


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.           /* 
    2.            * -- High Performance Computing Linpack Benchmark (HPL)                
    3.            *    HPL - 2.0 - September 10, 2008                          
    4.            *    Antoine P. Petitet                                                
    5.            *    University of Tennessee, Knoxville                                
    6.            *    Innovative Computing Laboratory                                 
    7.            *    (C) Copyright 2000-2008 All Rights Reserved                       
    8.            *                                                                      
    9.            * -- Copyright notice and Licensing terms:                             
   10.            *                                                                      
   11.            * Redistribution  and  use in  source and binary forms, with or without
   12.            * modification, are  permitted provided  that the following  conditions
   13.            * are met:                                                             
   14.            *                                                                      
   15.            * 1. Redistributions  of  source  code  must retain the above copyright
   16.            * notice, this list of conditions and the following disclaimer.        
   17.            *                                                                      
   18.            * 2. Redistributions in binary form must reproduce  the above copyright
   19.            * notice, this list of conditions,  and the following disclaimer in the
   20.            * documentation and/or other materials provided with the distribution. 
   21.            *                                                                      
   22.            * 3. All  advertising  materials  mentioning  features  or  use of this
   23.            * software must display the following acknowledgement:                 
   24.            * This  product  includes  software  developed  at  the  University  of
   25.            * Tennessee, Knoxville, Innovative Computing Laboratory.             
   26.            *                                                                      
   27.            * 4. The name of the  University,  the name of the  Laboratory,  or the
   28.            * names  of  its  contributors  may  not  be used to endorse or promote
   29.            * products  derived   from   this  software  without  specific  written
   30.            * permission.                                                          
   31.            *                                                                      
   32.            * -- Disclaimer:                                                       
   33.            *                                                                      
   34.            * THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   35.            * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT
   36.            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   37.            * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY
   38.            * OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,
   39.            * SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
   40.            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   41.            * DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY
   42.            * THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT
   43.            * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   44.            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
   45.            * ---------------------------------------------------------------------
   46.            */ 
   47.           /*
   48.            * Include files
   49.            */
   50.           #include "hpl.h"
   51.           
   52.           #ifdef HPL_STDC_HEADERS
   53.           void HPL_max
   54.           (
   55.              const int                        N,
   56.              const void *                     IN,
   57.              void *                           INOUT,
   58.              const HPL_T_TYPE                 DTYPE
   59.           )
   60.           #else
   61.           void HPL_max
   62.           ( N, IN, INOUT, DTYPE )
   63.              const int                        N;
   64.              const void *                     IN;
   65.              void *                           INOUT;
   66.              const HPL_T_TYPE                 DTYPE;
   67.           #endif
   68.           {
   69.           /* 
   70.            * Purpose
   71.            * =======
   72.            *
   73.            * HPL_max combines (max) two buffers.
   74.            * 
   75.            *
   76.            * Arguments
   77.            * =========
   78.            *
   79.            * N       (input)                       const int
   80.            *         On entry, N  specifies  the  length  of  the  buffers  to  be
   81.            *         combined. N must be at least zero.
   82.            *
   83.            * IN      (input)                       const void *
   84.            *         On entry, IN points to the input-only buffer to be combined.
   85.            *
   86.            * INOUT   (input/output)                void *
   87.            *         On entry, INOUT  points  to  the  input-output  buffer  to be
   88.            *         combined.  On exit,  the  entries of this array contains  the
   89.            *         combined results.
   90.            *
   91.            * DTYPE   (input)                       const HPL_T_TYPE
   92.            *         On entry,  DTYPE  specifies the type of the buffers operands.
   93.            *
   94.            * ---------------------------------------------------------------------
   95.            */ 
   96.           /*
   97.            * .. Local Variables ..
   98.            */
   99.              register int               i;
  100.           /* ..
  101.            * .. Executable Statements ..
  102.            */
  103.              if( DTYPE == HPL_INT )
  104.              {
  105.                 const int       * a = (const int *)(IN);
  106.                 int             * b = (int *)(INOUT);
  107.  + r4--<>       for( i = 0; i < N; i++ ) b[i] = Mmax( a[i], b[i] );
  108.              }
  109.              else
  110.              {
  111.                 const double    * a = (const double *)(IN);
  112.                 double          * b = (double *)(INOUT);
  113.  + r4--<>       for( i = 0; i < N; i++ ) b[i] = Mmax( a[i], b[i] );
  114.              }
  115.           /*
  116.            * End of HPL_max
  117.            */
  118.           }

CC-6005 CC: SCALAR File = HPL_max.c, Line = 107 
  A loop was unrolled 4 times.

CC-6290 CC: VECTOR File = HPL_max.c, Line = 107 
  A loop was not vectorized because a recurrence was found between "IN" and "INOUT" at line 107.

CC-6005 CC: SCALAR File = HPL_max.c, Line = 113 
  A loop was unrolled 4 times.

CC-6290 CC: VECTOR File = HPL_max.c, Line = 113 
  A loop was not vectorized because a recurrence was found between "IN" and "INOUT" at line 113.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
