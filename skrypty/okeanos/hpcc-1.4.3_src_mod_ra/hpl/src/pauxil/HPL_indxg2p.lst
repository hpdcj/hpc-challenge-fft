%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/pauxil/HPL_indxg2p.c
Compiled : 2016-03-19  13:19:37
Compiler : Version 8.4.5
Ftnlx    : Version 8413 (libcif 84006)
Target   : x86-64
Command  : driver.cc -h cpu=haswell -h static -D __CRAYXC -D __CRAY_HASWELL
           -D __CRAYXT_COMPUTE_LINUX_TARGET -h network=aries
           -o ../../../src/pauxil/HPL_indxg2p.o
           -c ../../../src/pauxil/HPL_indxg2p.c -I ../../../include
           -I ../../../include/CrayX1 -D Add_ -D StringSunStyle
           -D F77_INTEGER=int -O 2 -h list=m -D LONG_IS_64BITS -h restrict=a
           -W l,--rpath=/opt/cray/cce/8.4.5/craylibs/x86-64
           -ibase-compiler /opt/cray/cce/8.4.5/CC/x86-64/compiler_include_base
           -isystem /opt/cray/cce/8.4.5/craylibs/x86-64/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include-fixed
           -isystem /usr/include
           -I /opt/cray/mpt/7.3.2/gni/mpich-cray/8.3/include
           -I /opt/cray/libsci/16.03.1/CRAY/8.3/x86_64/include
           -I /opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
           -I /opt/cray/pmi/5.0.10-1.0000.11050.0.0.ari/include
           -I /opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
           -I /opt/cray/dmapp/7.0.1-1.0502.11080.8.76.ari/include
           -I /opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
           -I /opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
           -I /opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/../include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/..//include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
           -I /opt/cray-hss-devel/7.2.0/include

clx report
------------
Source   : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/pauxil/HPL_indxg2p.c
Date     : 03/19/2016  13:19:37


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     There are no optimizations or loops to mark


    1.    /* 
    2.     * -- High Performance Computing Linpack Benchmark (HPL)                
    3.     *    HPL - 2.0 - September 10, 2008                          
    4.     *    Antoine P. Petitet                                                
    5.     *    University of Tennessee, Knoxville                                
    6.     *    Innovative Computing Laboratory                                 
    7.     *    (C) Copyright 2000-2008 All Rights Reserved                       
    8.     *                                                                      
    9.     * -- Copyright notice and Licensing terms:                             
   10.     *                                                                      
   11.     * Redistribution  and  use in  source and binary forms, with or without
   12.     * modification, are  permitted provided  that the following  conditions
   13.     * are met:                                                             
   14.     *                                                                      
   15.     * 1. Redistributions  of  source  code  must retain the above copyright
   16.     * notice, this list of conditions and the following disclaimer.        
   17.     *                                                                      
   18.     * 2. Redistributions in binary form must reproduce  the above copyright
   19.     * notice, this list of conditions,  and the following disclaimer in the
   20.     * documentation and/or other materials provided with the distribution. 
   21.     *                                                                      
   22.     * 3. All  advertising  materials  mentioning  features  or  use of this
   23.     * software must display the following acknowledgement:                 
   24.     * This  product  includes  software  developed  at  the  University  of
   25.     * Tennessee, Knoxville, Innovative Computing Laboratory.             
   26.     *                                                                      
   27.     * 4. The name of the  University,  the name of the  Laboratory,  or the
   28.     * names  of  its  contributors  may  not  be used to endorse or promote
   29.     * products  derived   from   this  software  without  specific  written
   30.     * permission.                                                          
   31.     *                                                                      
   32.     * -- Disclaimer:                                                       
   33.     *                                                                      
   34.     * THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   35.     * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT
   36.     * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   37.     * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY
   38.     * OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,
   39.     * SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
   40.     * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   41.     * DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY
   42.     * THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT
   43.     * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   44.     * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
   45.     * ---------------------------------------------------------------------
   46.     */ 
   47.    /*
   48.     * Include files
   49.     */
   50.    #include "hpl.h"
   51.    
   52.    #ifdef HPL_STDC_HEADERS
   53.    int HPL_indxg2p
   54.    (
   55.       const int                        IG,
   56.       const int                        INB,
   57.       const int                        NB,
   58.       const int                        SRCPROC,
   59.       const int                        NPROCS
   60.    )
   61.    #else
   62.    int HPL_indxg2p
   63.    ( IG, INB, NB, SRCPROC, NPROCS )
   64.       const int                        IG;
   65.       const int                        INB;
   66.       const int                        NB;
   67.       const int                        SRCPROC;
   68.       const int                        NPROCS;
   69.    #endif
   70.    {
   71.    /* 
   72.     * Purpose
   73.     * =======
   74.     *
   75.     * HPL_indxg2p computes the process coordinate  which posseses the entry
   76.     * of a matrix specified by a global index IG.
   77.     *
   78.     * Arguments
   79.     * =========
   80.     *
   81.     * IG      (input)                       const int
   82.     *         On entry, IG specifies the global index of the matrix  entry.
   83.     *         IG must be at least zero.
   84.     *
   85.     * INB     (input)                       const int
   86.     *         On entry,  INB  specifies  the size of the first block of the
   87.     *         global matrix. INB must be at least one.
   88.     *
   89.     * NB      (input)                       const int
   90.     *         On entry,  NB specifies the blocking factor used to partition
   91.     *         and distribute the matrix A. NB must be larger than one.
   92.     *
   93.     * SRCPROC (input)                       const int
   94.     *         On entry,  SRCPROC  specifies  the coordinate of the  process
   95.     *         that possesses the first row or column of the matrix. SRCPROC
   96.     *         must be at least zero and strictly less than NPROCS.
   97.     *
   98.     * NPROCS  (input)                       const int
   99.     *         On entry,  NPROCS  specifies the total number of process rows
  100.     *         or columns over which the matrix is distributed.  NPROCS must
  101.     *         be at least one.
  102.     *
  103.     * ---------------------------------------------------------------------
  104.     */ 
  105.    /*
  106.     * .. Local Variables ..
  107.     */
  108.       int                        proc;
  109.    /* ..
  110.     * .. Executable Statements ..
  111.     */
  112.       if( ( IG < INB ) || ( SRCPROC == -1 ) || ( NPROCS == 1 ) )
  113.    /*
  114.     * IG  belongs  to the first block,  or the data is not distributed,  or
  115.     * there is just one process in this dimension of the grid.
  116.     */
  117.          return( SRCPROC );
  118.    /*
  119.     * Otherwise,  IG is in block 1 + ( IG - INB ) / NB. Add this to SRCPROC
  120.     * and take the NPROCS  modulo (definition of the block-cyclic data dis-
  121.     * tribution).
  122.     */
  123.       proc = SRCPROC + 1 + ( IG - INB ) / NB;
  124.       return( MPosMod( proc, NPROCS ) );
  125.    /*
  126.     * End of HPL_indxg2p
  127.     */
  128.    }


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
