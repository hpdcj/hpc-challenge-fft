%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/blas/HPL_idamax.c
Compiled : 2016-03-19  13:19:27
Compiler : Version 8.4.5
Ftnlx    : Version 8413 (libcif 84006)
Target   : x86-64
Command  : driver.cc -h cpu=haswell -h static -D __CRAYXC -D __CRAY_HASWELL
           -D __CRAYXT_COMPUTE_LINUX_TARGET -h network=aries
           -o ../../../src/blas/HPL_idamax.o -c ../../../src/blas/HPL_idamax.c
           -I ../../../include -I ../../../include/CrayX1 -D Add_
           -D StringSunStyle -D F77_INTEGER=int -O 2 -h list=m
           -D LONG_IS_64BITS -h restrict=a
           -W l,--rpath=/opt/cray/cce/8.4.5/craylibs/x86-64
           -ibase-compiler /opt/cray/cce/8.4.5/CC/x86-64/compiler_include_base
           -isystem /opt/cray/cce/8.4.5/craylibs/x86-64/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include
           -I /opt/gcc/4.8.1/snos/lib/gcc/x86_64-suse-linux/4.8.1/include-fixed
           -isystem /usr/include
           -I /opt/cray/mpt/7.3.2/gni/mpich-cray/8.3/include
           -I /opt/cray/libsci/16.03.1/CRAY/8.3/x86_64/include
           -I /opt/cray/rca/1.0.0-2.0502.60530.1.62.ari/include
           -I /opt/cray/pmi/5.0.10-1.0000.11050.0.0.ari/include
           -I /opt/cray/xpmem/0.1-2.0502.64982.5.3.ari/include
           -I /opt/cray/dmapp/7.0.1-1.0502.11080.8.76.ari/include
           -I /opt/cray/gni-headers/4.0-1.0502.10859.7.8.ari/include
           -I /opt/cray/ugni/6.0-1.0502.10863.8.29.ari/include
           -I /opt/cray/udreg/2.3.2-1.0502.10518.2.17.ari/include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/../include
           -I /opt/cray/cce/8.4.5/craylibs/x86-64/pkgconfig/..//include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/wlm_detect/1.0-1.0502.64649.2.1.ari/include
           -I /opt/cray/alps/5.2.4-2.0502.9774.31.11.ari/include
           -I /opt/cray/krca/1.0.0-2.0502.63139.4.31.ari/include
           -I /opt/cray-hss-devel/7.2.0/include

clx report
------------
Source   : /lustre/tetyda/home/lgorski/okeanos_scripts/randomaccess/hpcc-1.4.3_src_mod_ra/hpl/lib/arch/build/../../../src/blas/HPL_idamax.c
Date     : 03/19/2016  13:19:27


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.     /* 
    2.      * -- High Performance Computing Linpack Benchmark (HPL)                
    3.      *    HPL - 2.0 - September 10, 2008                          
    4.      *    Antoine P. Petitet                                                
    5.      *    University of Tennessee, Knoxville                                
    6.      *    Innovative Computing Laboratory                                 
    7.      *    (C) Copyright 2000-2008 All Rights Reserved                       
    8.      *                                                                      
    9.      * -- Copyright notice and Licensing terms:                             
   10.      *                                                                      
   11.      * Redistribution  and  use in  source and binary forms, with or without
   12.      * modification, are  permitted provided  that the following  conditions
   13.      * are met:                                                             
   14.      *                                                                      
   15.      * 1. Redistributions  of  source  code  must retain the above copyright
   16.      * notice, this list of conditions and the following disclaimer.        
   17.      *                                                                      
   18.      * 2. Redistributions in binary form must reproduce  the above copyright
   19.      * notice, this list of conditions,  and the following disclaimer in the
   20.      * documentation and/or other materials provided with the distribution. 
   21.      *                                                                      
   22.      * 3. All  advertising  materials  mentioning  features  or  use of this
   23.      * software must display the following acknowledgement:                 
   24.      * This  product  includes  software  developed  at  the  University  of
   25.      * Tennessee, Knoxville, Innovative Computing Laboratory.             
   26.      *                                                                      
   27.      * 4. The name of the  University,  the name of the  Laboratory,  or the
   28.      * names  of  its  contributors  may  not  be used to endorse or promote
   29.      * products  derived   from   this  software  without  specific  written
   30.      * permission.                                                          
   31.      *                                                                      
   32.      * -- Disclaimer:                                                       
   33.      *                                                                      
   34.      * THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   35.      * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT
   36.      * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   37.      * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY
   38.      * OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,
   39.      * SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
   40.      * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   41.      * DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY
   42.      * THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT
   43.      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   44.      * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
   45.      * ---------------------------------------------------------------------
   46.      */ 
   47.     /*
   48.      * Include files
   49.      */
   50.     #include "hpl.h"
   51.     
   52.     #ifndef HPL_idamax
   53.     
   54.     #ifdef HPL_STDC_HEADERS
   55.     int HPL_idamax
   56.     (
   57.        const int                        N,
   58.        const double *                   X,
   59.        const int                        INCX
   60.     )
   61.     #else
   62.     int HPL_idamax
   63.     ( N, X, INCX )
   64.        const int                        N;
   65.        const double *                   X;
   66.        const int                        INCX;
   67.     #endif 
   68.     {
   69.     /* 
   70.      * Purpose
   71.      * =======
   72.      *
   73.      * HPL_idamax returns  the index in an n-vector  x  of the first element
   74.      * having maximum absolute value.
   75.      *
   76.      * Arguments
   77.      * =========
   78.      *
   79.      * N       (local input)                 const int
   80.      *         On entry, N specifies the length of the vector x. N  must  be
   81.      *         at least zero.
   82.      *
   83.      * X       (local input)                 const double *
   84.      *         On entry,  X  is an incremented array of dimension  at  least
   85.      *         ( 1 + ( n - 1 ) * abs( INCX ) )  that  contains the vector x.
   86.      *
   87.      * INCX    (local input)                 const int
   88.      *         On entry, INCX specifies the increment for the elements of X.
   89.      *         INCX must not be zero.
   90.      *
   91.      * ---------------------------------------------------------------------
   92.      */ 
   93.     #ifdef HPL_CALL_CBLAS
   94.        return( (int)(cblas_idamax( N, X, INCX )) );
   95.     #endif
   96.     #ifdef HPL_CALL_VSIPL
   97.        register double           absxi, smax = HPL_rzero, x0, x1, x2, x3,
   98.                                  x4, x5, x6, x7;
   99.        const double              * StX;
  100.        register int              imax = 0, i = 0, j;
  101.        int                       nu;
  102.        const int                 incX2 = 2 * INCX, incX3 = 3 * INCX,
  103.                                  incX4 = 4 * INCX, incX5 = 5 * INCX,
  104.                                  incX6 = 6 * INCX, incX7 = 7 * INCX,
  105.                                  incX8 = 8 * INCX;
  106.     
  107.        if( N > 0 )
  108.        {
  109.           if( ( nu = ( N >> 3 ) << 3 ) != 0 )
  110.           {
  111.              StX = X + nu * INCX;
  112.      
  113.              do
  114.              {
  115.                 x0 = (*X);     x4 = X[incX4]; x1 = X[INCX ]; x5 = X[incX5];
  116.                 x2 = X[incX2]; x6 = X[incX6]; x3 = X[incX3]; x7 = X[incX7];
  117.      
  118.                 absxi = Mabs( x0 ); if( absxi > smax ) { imax = i; smax = absxi; }
  119.                 i    += 1;
  120.                 absxi = Mabs( x1 ); if( absxi > smax ) { imax = i; smax = absxi; }
  121.                 i    += 1;
  122.                 absxi = Mabs( x2 ); if( absxi > smax ) { imax = i; smax = absxi; }
  123.                 i    += 1;
  124.                 absxi = Mabs( x3 ); if( absxi > smax ) { imax = i; smax = absxi; }
  125.                 i    += 1;
  126.                 absxi = Mabs( x4 ); if( absxi > smax ) { imax = i; smax = absxi; }
  127.                 i    += 1;
  128.                 absxi = Mabs( x5 ); if( absxi > smax ) { imax = i; smax = absxi; }
  129.                 i    += 1;
  130.                 absxi = Mabs( x6 ); if( absxi > smax ) { imax = i; smax = absxi; }
  131.                 i    += 1;
  132.                 absxi = Mabs( x7 ); if( absxi > smax ) { imax = i; smax = absxi; }
  133.                 i    += 1;
  134.      
  135.                 X    += incX8;
  136.      
  137.              } while( X != StX );
  138.           }
  139.      
  140.           for( j = N - nu; j != 0; j-- )
  141.           {
  142.              x0    = (*X);
  143.              absxi = Mabs( x0 ); if( absxi > smax ) { imax = i; smax = absxi; }
  144.              i    += 1;
  145.              X    += INCX;
  146.           }
  147.        }
  148.        return( imax );
  149.     #endif
  150.     #ifdef HPL_CALL_FBLAS
  151.     #ifdef HPL_USE_F77_INTEGER_DEF
  152.        const F77_INTEGER         F77N = N, F77incx = INCX;
  153.     #else
  154.     #define F77N                 N
  155.     #define F77incx              INCX
  156.     #endif
  157.        int                       imax = 0;
  158.     
  159.  +     if( N > 0 ) imax = F77idamax( &F77N, X, &F77incx ) - 1;
  160.        return( imax );
  161.     #endif
  162.     /*
  163.      * End of HPL_idamax
  164.      */
  165.     }
  166.      
  167.     #endif

CC-3021 CC: IPA File = HPL_idamax.c, Line = 159 
  "idamax_" (called from "HPL_idamax") was not inlined because the compiler was unable to locate the routine.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
